apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    token: {{ random_token }}  # important thing to set as it will be used when joining nodes to the k8s cluster.
    ttl: 24h0m0s
    usages:
      - signing
      - authentication

certificateKey: {{ certificate_key }}  # important thing to set as it will be used when joining nodes to the k8s cluster.
{% if cni_type == "cilium" %}
skipPhases:
  - addon/kube-proxy
{% endif %}
nodeRegistration:
  criSocket: unix:///var/run/containerd/containerd.sock
  imagePullPolicy: IfNotPresent
  taints:
    - key: "node-role.kubernetes.io/control-plane"
      value: "false"
      effect: "NoSchedule"
---
apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
apiServer:
  certSANs:
    - "{{ loadbalancer_apiserver }}"
    - "127.0.0.1"
certificatesDir: /etc/kubernetes/pki
clusterName: kubernetes
controllerManager: {}
dns: {}
etcd:
  external:
    endpoints:
    {% for host in groups['etcd'] %}
    - "https://{{ hostvars[host]['ip'] }}:2379"
    {% endfor %}

    caFile: "/etc/kubernetes/pki/etcd/ca.pem"
    certFile: "/etc/kubernetes/pki/etcd/etcd.pem"
    keyFile: "/etc/kubernetes/pki/etcd/etcd-key.pem"
imageRepository: registry.k8s.io
kubernetesVersion: "{{ kubernetes_version }}"
controlPlaneEndpoint: "{{ loadbalancer_apiserver }}:6443"
networking:
  dnsDomain: cluster.local
  serviceSubnet: "{{ service_subnet }}"
  podSubnet: "172.16.0.0/16"
scheduler: {}
